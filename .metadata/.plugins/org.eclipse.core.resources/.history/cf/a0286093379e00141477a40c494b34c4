package com.controller;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.io.IOUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.controller.bean.AjaxResult;
import com.controller.struts2.BaseController;
import com.service.SpxxImageBiz;


@Controller
@RequestMapping(value = "/editorimage")
public class EditimageController extends BaseController{


	private DateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");

	@Autowired
	private SpxxImageBiz imageBiz;
	

	@RequestMapping(value = "uploadEditorImage", method = RequestMethod.POST)
	@ResponseBody
	public String uploadSig(@RequestParam("editimage") CommonsMultipartFile files,String width,String height,String content,
			HttpServletRequest request) {

		String basePath = request.getServletContext().getRealPath("/upload")+File.separator+"editorimage";
		AjaxResult ajaxResult = new AjaxResult();
		String dateT = df.format(new Date());

		if (!files.isEmpty()) {

		
			String src = "/" + "/" + dateT + "/";
			basePath += src;
			File f = new File(basePath);

			System.out.println(basePath);

			if (!f.exists()) {
				System.out.println(f.mkdirs());
			}
			try {
				IOUtils.copy(files.getInputStream(), new FileOutputStream(
						basePath + files.getOriginalFilename()));

				ajaxResult.setSuccess(true);
				ajaxResult.setMsg(src + files.getOriginalFilename());
				
				return "{success:true,url:'"+src + files.getOriginalFilename()+"',width:'"+width+"',height:'"+height+"',content:'"+content+"'}";
			} catch (Exception e) {
                return this.outError();
			}
		}
		
	    return this.outError();
		
	}
	
	@RequestMapping(value = "uploadSpxxImageSig", method = RequestMethod.POST)
	@ResponseBody
	public String uploadSpxxImageSig(@RequestParam("editimage") CommonsMultipartFile files,String content,
			HttpServletRequest request) {

		String basePath = request.getServletContext().getRealPath("/upload")+File.separator+"editorimage";
		AjaxResult ajaxResult = new AjaxResult();
		String dateT = df.format(new Date());

		if (!files.isEmpty()) {

		
			String src = "/" + "/" + dateT + "/";
			basePath += src;
			File f = new File(basePath);

			System.out.println(basePath);

			if (!f.exists()) {
				System.out.println(f.mkdirs());
			}
			try {
				IOUtils.copy(files.getInputStream(), new FileOutputStream(
						basePath + files.getOriginalFilename()));
                
				ajaxResult.setSuccess(true);
				ajaxResult.setMsg(src + files.getOriginalFilename());
				
				return "{success:true,url:'"+src + files.getOriginalFilename()+"',content:'"+content+"'}";
			} catch (Exception e) {
                return this.outError();
			}
		}
		
	    return this.outError();
		
	}

}
