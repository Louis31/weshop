package com.controller.struts2.comment;

import java.util.Date;

import net.sf.json.JSONArray;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.controller.struts2.BaseController;
import com.cxstock.utils.pubutil.Page;
import com.entities.Comment;
import com.service.CommentBiz;


@Controller
@RequestMapping("/comment")
public class CommentController extends BaseController{
	
	@Autowired
	private CommentBiz commentBiz;
	
	/**
	 * 根据星级查询,分页获取评论
	 */
	@RequestMapping(value="/getCommentByStar")
	@ResponseBody
	public String findKcByParams(String starbegin,String starend,Page page){
		try {

			if(StringUtils.isEmpty(starbegin)||StringUtils.isEmpty(starend)){
				return this.outListString(commentBiz.getComment(page.getStart(), page.getLimit()));
			}else{
				return this.outListString(commentBiz.getCommentByStar(starbegin, starend, start, limit));
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return this.outError();
	}
	
	/**
	 * 根据星级查询,分页获取评论
	 */
	@RequestMapping(value="/getComment")
	@ResponseBody
	public String getComment(int page,int pageSize){
		try {
			return this.outListString(commentBiz.getComment(page, pageSize));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return this.outError();
	}

	/**
	 * 根据星级查询总数
	 */
	@RequestMapping(value="/getCommentNumByStar")
	@ResponseBody
	public String getCommentNumByStar(String starbegin,String starend){
		try {
			return this.outObjString(commentBiz.getCommentNumByStar(starbegin, starend));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return this.outError();
	}
	
	
	/**
	 * 回复评论
	 */
	@RequestMapping(value="/revComment")
	@ResponseBody
	public String revComment(String commendId,String revcon){
		try {
			commentBiz.revComment(commendId, revcon);
			return this.outObjString(0);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return this.outError();
	}
	
	/**
	 * 置顶
	 */
	@RequestMapping(value="/topComment")
	@ResponseBody
	public String topComment(String commendId){
		try {
			commentBiz.topComment(commendId);
			return this.outObjString(0);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return this.outError();
	}
	
	/**
	 * 评论修改
	 */
	@RequestMapping(value="/updateComment")
	@ResponseBody
	public String updateComment(String id,String spid,String spname,String stars,String revcon,String reviewer,String content,String top,Date date){
		try {
			Comment comment = getCommnet(spid, spname, stars, reviewer, content,top,date);
			comment.setId(Long.parseLong(id));
			comment.setRevcon(revcon);
			commentBiz.updateComment(comment);
			return this.outObjString(0);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return this.outError();
	}
	
	/**
	 * 提交评论
	 */
	@RequestMapping(value="/saveComment")
	@ResponseBody
	public String saveComment(String spid,String spname,String stars,String reviewer,String content){
		try {
			commentBiz.saveComment(getCommnet(spid, spname, stars, reviewer, content,"0",new Date()));
			return this.outObjString(0);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return this.outError();
	}
	
	private Comment getCommnet(String spid,String spname,String stars,String reviewer,String content,String top,Date date){
		Comment comment = new Comment();
		comment.setContent(content);
		comment.setReviewer(reviewer);
		comment.setRevTime(new Date());
		comment.setSpid(spid);
		comment.setStars(stars);
		comment.setSpname(spname);
		comment.setTop(top);
		comment.setRevTime(date);
		return comment;
	}
	
}
