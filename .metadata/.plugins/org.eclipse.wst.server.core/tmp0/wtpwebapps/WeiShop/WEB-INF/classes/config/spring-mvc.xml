<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 注解扫描包 只扫描controller -->
	<context:component-scan base-package="com.controller,com.weis.controller" />
	<!-- <context:component-scan base-package="com"> <context:include-filter 
		type="annotation" expression="org.springframework.stereotype.Controller" 
		/> <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" 
		/> <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" 
		/> </context:component-scan> -->
	<!-- 开启注解 -->


	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager"
		conversion-service="conversionService">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
				<!-- HTTP 头里不打印一堆的 Accept-Charset 属性 -->
				<property name="writeAcceptCharset" value="false" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
			</bean>


		</mvc:message-converters>
		<!--<mvc:argument-resolvers> SpringMVC与SpringDataJpa 支持Pageable处理pageable的实例化，避免出现无法实例化接口的问题，并使得能够使用PageableDefault注解提供默认初始值 
			<bean class="org.springframework.data.web.PageableArgumentResolver" > <property 
			name="prefix" value="" /> <property name="separator" value="" /> </bean> 
			</mvc:argument-resolvers> -->

	</mvc:annotation-driven>
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	</bean>

	<!-- 如果当前请求为“/”时，则转发到“/login” -->
	<mvc:view-controller path="/" view-name="forward:/login" />
	<mvc:resources location="/static/" mapping="/static/**" />
	<mvc:resources location="/ext/" mapping="/static/ext/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
			</value>
		</property>
	</bean>

	<!-- 定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--支持JSTL -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 上传文件拦截，设置最大上传文件大小 10M=10*1024*1024(B)=10485760 bytes -->
 	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- <property name="maxUploadSize" value="200000" /> -->
	</bean> 
	
	<!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>

</beans>